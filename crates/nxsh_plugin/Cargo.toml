[package]
name = "nxsh_plugin"
version = "0.1.0"
edition = "2021"

[dependencies]
nxsh_core = { path = "../nxsh_core" }
# === STAGE 1: NATIVE RUST PLUGIN SUPPORT ONLY ===
# WASI runtime support will be added in Stage 2 after finding 100% Pure Rust solution
# Current priority: Restore core plugin functionality without C dependencies

# Plugin management and loading
libloading = "0.8"          # Pure Rust dynamic library loading
dlopen2 = "0.7"             # Cross-platform dynamic loading
# Async runtime
tokio = { version = "1.0", features = ["full"] }
# Error handling
anyhow = "1.0"
thiserror = "1.0"
# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# Pure Rust cryptography - RustCrypto ecosystem (no C dependencies)
ed25519-dalek = "2.1"          # Pure Rust Ed25519
sha2 = "0.10"                  # Pure Rust SHA-2
chacha20poly1305 = "0.10"      # Pure Rust ChaCha20-Poly1305 (instead of AES-GCM)
argon2 = "0.5"                 # Pure Rust Argon2
rand = "0.8"                   # Cryptographically secure random number generator
base64 = "0.22"                # Base64 encoding/decoding
# Pure Rust HTTP client (NO TLS to avoid ring dependency)
# For production, implement custom Pure Rust TLS or use external tools
ureq = { version = "2.11", default-features = false }
# Version handling
semver = "1.0"
# File system operations
walkdir = "2.3"
dirs = "5.0"
# Configuration
toml = "0.8"
# Logging
log = "0.4"
# Time handling
chrono = { version = "0.4", features = ["serde"] }
# Lazy static initialization
once_cell = "1.19"
# Secure memory handling
zeroize = { version = "1.7", features = ["zeroize_derive"] }
# YAML parsing
serde_yaml = "0.9"
# Hex encoding
hex = "0.4"
# UUID generation for resource tracking
uuid = { version = "1.6", features = ["v4", "serde"] }
# File system watching for hot reload
notify = "4.0" 