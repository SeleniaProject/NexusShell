name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build default (release)
        run: cargo build -p nxsh_cli --release

      - name: Build busybox-min (release-small)
        run: cargo build -p nxsh_cli --no-default-features --features busybox-min --profile release-small

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/nxsh.exe dist/nxsh-windows-x86_64.exe
          Copy-Item target/release-small/nxsh.exe dist/nxsh-busybox-min-windows-x86_64.exe
          Compress-Archive -Path dist/nxsh-windows-x86_64.exe -DestinationPath dist/nxsh-windows-x86_64.zip
          Compress-Archive -Path dist/nxsh-busybox-min-windows-x86_64.exe -DestinationPath dist/nxsh-busybox-min-windows-x86_64.zip

      - name: Package (Linux)
        if: runner.os == 'Linux'
        run: |
          set -euo pipefail
          mkdir -p dist
          cp target/release/nxsh dist/nxsh-linux-x86_64
          cp target/release-small/nxsh dist/nxsh-busybox-min-linux-x86_64
          tar -C dist -czf dist/nxsh-linux-x86_64.tar.gz nxsh-linux-x86_64
          tar -C dist -czf dist/nxsh-busybox-min-linux-x86_64.tar.gz nxsh-busybox-min-linux-x86_64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: dist/*

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/nxsh-*.zip
            artifacts/**/nxsh-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: NexusShell Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-container-sign:
    name: Build & Sign Container Image
    runs-on: ubuntu-latest
    steps:
      # Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Set up Docker Buildx for multi-arch builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GHCR so we can push images
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build + push multi-architecture image (amd64/arm64/armv7)
      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/seleniashell/nxsh:${{ github.ref_name }}
            ghcr.io/seleniashell/nxsh:latest
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      # Install Notation CLI for Notary v2 signing
      - name: Install notation CLI
        run: |
          curl -sSL https://github.com/notaryproject/notation/releases/latest/download/notation-linux-amd64.tar.gz | tar -xz
          sudo mv notation /usr/local/bin/notation
        shell: bash

      # Import signing materials and sign the imageâ€”keys are provided via repository secrets
      - name: Sign container with Notary v2
        env:
          NOTATION_CERT: ${{ secrets.NOTATION_CERT }}
          NOTATION_KEY: ${{ secrets.NOTATION_KEY }}
        run: |
          echo "$NOTATION_CERT" > cert.pem
          echo "$NOTATION_KEY"  > key.pem
          notation cert import --type ca cert.pem
          notation key import key.pem --id nxsh-release
          notation sign --key nxsh-release ghcr.io/seleniashell/nxsh:${{ github.ref_name }}
        shell: bash

  brew-and-scoop:
    name: Homebrew & Scoop Publishing
    needs: build-container-sign
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download the Darwin and Windows release archives from current tag
      - name: Download release artifacts
        uses: actions/download-release-asset@v1
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          pattern: nxsh-${{ github.ref_name }}-*
          token: ${{ secrets.GITHUB_TOKEN }}

      # Generate Homebrew formula (.rb file)
      - name: Generate Homebrew formula (skipped)
        run: echo "gen_homebrew_formula script removed; please update tap manually"

      # Create PR to official Homebrew tap repository
      - name: Homebrew tap PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: SeleniaProject/homebrew-nexusshell
          title: "homebrew: update NexusShell to ${{ github.ref_name }}"
          body: "Automated formula update triggered by release ${{ github.ref_name }}."
          commit-message: "homebrew: bump NexusShell to ${{ github.ref_name }}"
          branch: "formula/nexusshell-${{ github.ref_name }}"
          add-paths: nexusshell.rb

      # Generate Scoop manifest (JSON)
      - name: Generate Scoop manifest (skipped)
        run: echo "gen_scoop_manifest script removed; please update bucket manually"

      # Create PR to Scoop bucket repository
      - name: Scoop bucket PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.SCOOP_BUCKET_TOKEN }}
          repository: SeleniaProject/scoop-bucket
          title: "scoop: update NexusShell to ${{ github.ref_name }}"
          body: "Automated manifest update triggered by release ${{ github.ref_name }}."
          commit-message: "scoop: bump NexusShell to ${{ github.ref_name }}"
          branch: "bucket/nexusshell-${{ github.ref_name }}"
          add-paths: nxsh.json 