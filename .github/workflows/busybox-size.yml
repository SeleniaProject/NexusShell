name: BusyBox Size Gate

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  size:
    name: Build & Measure BusyBox Binary Size
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache cargo
        uses: swatinem/rust-cache@v2

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install optional tools (Linux UPX)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y upx-ucl

    - name: Build & size report (PowerShell on Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
      $ErrorActionPreference = 'Stop'
      cargo build -p nxsh_cli --no-default-features --features busybox-min --profile release-small
      $bin = "target/release-small/nxsh.exe"
      $size = (Get-Item $bin).Length
      "{`"size_bytes`":$size}" | Set-Content -Encoding UTF8 size_report.json
      Get-Content size_report.json

    - name: Build & size report (bash on Linux)
        if: runner.os == 'Linux'
        run: |
      cargo build -p nxsh_cli --no-default-features --features busybox-min --profile release-small
      BIN=target/release-small/nxsh
      SIZE=$(stat -c%s "$BIN")
      echo "{\"size_bytes\":$SIZE}" > size_report.json
          cat size_report.json

      - name: Upload size report artifact
        uses: actions/upload-artifact@v4
        with:
          name: busybox-size-${{ runner.os }}
          path: size_report.json

      - name: Summarize
        run: |
          echo "### BusyBox Size Report (${{ runner.os }})" >> $GITHUB_STEP_SUMMARY
          echo '\n' >> $GITHUB_STEP_SUMMARY
          cat size_report.json >> $GITHUB_STEP_SUMMARY
